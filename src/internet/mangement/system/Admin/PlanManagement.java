/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package internet.mangement.system.Admin;

import DAO.PlanDAO;
import Model.Plan;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hoang
 */
public class PlanManagement extends javax.swing.JFrame {

    /**
     * Creates new form Plan
     */
    public PlanManagement() {
        initComponents();
        setupTableSelectionListener();
        InitBandwidthValue(0, 1000);
        InitPricevalue(0, 10000000);
        plan_table.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = plan_table.getSelectedRow();
                if (selectedRow >= 0) {
                    DefaultTableModel model = (DefaultTableModel) plan_table.getModel();

//                    txtId.setText(model.getValueAt(selectedRow, 0).toString());
                    Selected_id = parseInt(model.getValueAt(selectedRow, 0).toString());
                    txt_edit_PlanName.setText(model.getValueAt(selectedRow, 1).toString());
                    txt_edit_PlanPrice.setText(model.getValueAt(selectedRow, 2).toString());
                    txt_edit_Dom_max.setText(model.getValueAt(selectedRow, 3).toString());
                    txt_edit_Dom_min.setText(model.getValueAt(selectedRow, 4).toString());
                    txt_edit_Inter_max.setText(model.getValueAt(selectedRow, 5).toString());
                    txt_edit_Inter_min.setText(model.getValueAt(selectedRow, 6).toString());
                }
            }
        });
    }
    private Double parseDouble(String s) {
        try {
            return (s == null || s.trim().isEmpty()) ? null : Double.parseDouble(s.trim());
        } catch (NumberFormatException e) {
            return null;
        }
    }

    private Integer parseInt(String s) {
        try {
            return (s == null || s.trim().isEmpty()) ? null : Integer.parseInt(s.trim());
        } catch (NumberFormatException e) {
            return null;
        }
    }
    private void InitBandwidthValue(int Min, int Max) {
        jSlider_domesticMax.setMaximum(Max);
        jSlider_domesticMin.setMaximum(Max);
        jSlider_domesticMax.setValue(Max);
        jSlider_domesticMin.setValue(Min);
        txt_dom_min.setText(String.valueOf(Min));
        txt_dom_max.setText(String.valueOf(Max));

        jSlider_internationalMax.setMaximum(Max);
        jSlider_internationalMin.setMaximum(Max);
        jSlider_internationalMax.setValue(Max);
        jSlider_internationalMin.setValue(Min);
        txt_inter_max.setText(String.valueOf(Max));
        txt_inter_min.setText(String.valueOf(Min));

    }
    private void InitPricevalue(int Min, int Max){
        jSlider_priceMax.setMaximum(Max);
        jSlider_priceMin.setMaximum(Max);
        jSlider_priceMax.setValue(Max);
        jSlider_priceMin.setValue(Min);
        txt_price_min.setText(String.valueOf(Min));
        txt_price_max.setText(String.valueOf(Max));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel_SearchPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_Plan_name = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        jPanel_BwFilterPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSlider_internationalMin = new javax.swing.JSlider();
        jSlider_internationalMax = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        checkbox_bw = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        Dimension d = new Dimension(68, 26);
        txt_dom_min = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_dom_max = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_inter_max = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_inter_min = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jSlider_domesticMax = new javax.swing.JSlider();
        jSlider_domesticMin = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel_PriceFilterPanel = new javax.swing.JPanel();
        checkbox_price = new javax.swing.JCheckBox();
        jSlider_priceMin = new javax.swing.JSlider();
        jLabel16 = new javax.swing.JLabel();
        jSlider_priceMax = new javax.swing.JSlider();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_price_max = new javax.swing.JTextField();
        txt_price_min = new javax.swing.JTextField();
        btn_filter = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_edit_PlanPrice = new javax.swing.JTextField();
        txt_edit_PlanName = new javax.swing.JTextField();
        txt_edit_Dom_min = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_edit_Dom_max = new javax.swing.JTextField();
        txt_edit_Inter_max = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_edit_Inter_min = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        plan_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel_SearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        jLabel1.setText("Tìm kiếm gói cước:");

        txt_Plan_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_Plan_nameActionPerformed(evt);
            }
        });

        btn_Search.setText("Tìm kiếm");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        jPanel_BwFilterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Tốc độ tối thiểu quốc tế:");

        jSlider_internationalMin.setMaximum(1000);
        jSlider_internationalMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_internationalMinStateChanged(evt);
            }
        });

        jSlider_internationalMax.setMaximum(1000);
        jSlider_internationalMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_internationalMaxStateChanged(evt);
            }
        });

        jLabel4.setText("Tốc độ tối đa quốc tế:");

        checkbox_bw.setText("Lọc theo tốc độ");
        checkbox_bw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_bwActionPerformed(evt);
            }
        });

        jLabel5.setText("Tốc độ trong nước:");

        txt_dom_min.setMinimumSize(d);
        txt_dom_min.setPreferredSize(d);
        txt_dom_min.setMaximumSize(d);
        txt_dom_min.setText("0");
        txt_dom_min.setName(""); // NOI18N
        txt_dom_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dom_minActionPerformed(evt);
            }
        });

        jLabel7.setText("-");

        txt_dom_max.setMinimumSize(d);
        txt_dom_max.setPreferredSize(d);
        txt_dom_max.setMaximumSize(d);
        txt_dom_max.setText("0");
        txt_dom_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dom_maxActionPerformed(evt);
            }
        });

        jLabel8.setText("Tốc độ quốc tế:");

        txt_inter_max.setMinimumSize(d);
        txt_inter_max.setPreferredSize(d);
        txt_inter_max.setMaximumSize(d);
        txt_inter_max.setText("0");

        jLabel9.setText("-");

        txt_inter_min.setMinimumSize(d);
        txt_inter_min.setPreferredSize(d);
        txt_inter_min.setMaximumSize(d);
        txt_inter_min.setText("0");

        jSlider_domesticMax.setMaximum(1000);
        jSlider_domesticMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_domesticMaxStateChanged(evt);
            }
        });

        jSlider_domesticMin.setMaximum(1000);
        jSlider_domesticMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_domesticMinStateChanged(evt);
            }
        });

        jLabel3.setText("Tốc độ tối thiểu trong nước:");

        jLabel2.setText("Tốc độ tối đa trong nước:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSlider_domesticMax, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSlider_domesticMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_domesticMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_domesticMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel_BwFilterPanelLayout = new javax.swing.GroupLayout(jPanel_BwFilterPanel);
        jPanel_BwFilterPanel.setLayout(jPanel_BwFilterPanelLayout);
        jPanel_BwFilterPanelLayout.setHorizontalGroup(
            jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BwFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_BwFilterPanelLayout.createSequentialGroup()
                        .addComponent(checkbox_bw)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_BwFilterPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider_internationalMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSlider_internationalMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel_BwFilterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_dom_min, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_dom_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_BwFilterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_inter_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_inter_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_BwFilterPanelLayout.setVerticalGroup(
            jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_BwFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkbox_bw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_dom_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txt_dom_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_internationalMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_internationalMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_BwFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_inter_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txt_inter_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel_PriceFilterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        checkbox_price.setText(" Lọc theo giá cước");
        checkbox_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_priceActionPerformed(evt);
            }
        });

        jSlider_priceMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_priceMinStateChanged(evt);
            }
        });

        jLabel16.setText("Giá cước:");

        jSlider_priceMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_priceMaxStateChanged(evt);
            }
        });

        jLabel14.setText("Giá cước tối đa:");

        jLabel15.setText("Giá cước tối thiểu:");

        jLabel17.setText("-");

        txt_price_max.setMinimumSize(d);
        txt_price_max.setPreferredSize(d);
        txt_price_max.setMaximumSize(d);
        txt_price_max.setText("0");

        txt_price_min.setMinimumSize(d);
        txt_price_min.setPreferredSize(d);
        txt_price_min.setMaximumSize(d);
        txt_price_min.setText("0");

        javax.swing.GroupLayout jPanel_PriceFilterPanelLayout = new javax.swing.GroupLayout(jPanel_PriceFilterPanel);
        jPanel_PriceFilterPanel.setLayout(jPanel_PriceFilterPanelLayout);
        jPanel_PriceFilterPanelLayout.setHorizontalGroup(
            jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PriceFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_PriceFilterPanelLayout.createSequentialGroup()
                        .addComponent(checkbox_price)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PriceFilterPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PriceFilterPanelLayout.createSequentialGroup()
                                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSlider_priceMax, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                                    .addComponent(jSlider_priceMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PriceFilterPanelLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_price_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(txt_price_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_PriceFilterPanelLayout.createSequentialGroup()
                    .addContainerGap(443, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addGap(80, 80, 80)))
        );
        jPanel_PriceFilterPanelLayout.setVerticalGroup(
            jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PriceFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkbox_price)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_priceMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSlider_priceMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_price_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_price_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel_PriceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_PriceFilterPanelLayout.createSequentialGroup()
                    .addContainerGap(85, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addContainerGap()))
        );

        btn_filter.setText("Lọc");
        btn_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_SearchPanelLayout = new javax.swing.GroupLayout(jPanel_SearchPanel);
        jPanel_SearchPanel.setLayout(jPanel_SearchPanelLayout);
        jPanel_SearchPanelLayout.setHorizontalGroup(
            jPanel_SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SearchPanelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Plan_name, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btn_Search)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_BwFilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel_SearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_PriceFilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel_SearchPanelLayout.setVerticalGroup(
            jPanel_SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_Plan_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Search))
                .addGap(18, 18, 18)
                .addComponent(jPanel_BwFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_PriceFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_filter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel_SearchPanel);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết"));

        jLabel10.setText("Tên gói cước:");

        jLabel11.setText("Giá gói:");

        jLabel12.setText("Tốc độ trong nước:");

        txt_edit_PlanPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_PlanPriceActionPerformed(evt);
            }
        });

        txt_edit_PlanName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_PlanNameActionPerformed(evt);
            }
        });

        txt_edit_Dom_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_Dom_minActionPerformed(evt);
            }
        });

        jLabel18.setText("-");

        txt_edit_Dom_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_Dom_maxActionPerformed(evt);
            }
        });

        txt_edit_Inter_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_Inter_maxActionPerformed(evt);
            }
        });

        jLabel19.setText("-");

        txt_edit_Inter_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_edit_Inter_minActionPerformed(evt);
            }
        });

        jLabel13.setText("Tốc độ quốc tế:");

        btn_add.setText("Thêm mới");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        jPanel6.add(btn_add);

        btn_edit.setText("Cập nhật");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jPanel6.add(btn_edit);

        btn_delete.setText("Xoá gói");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel6.add(btn_delete);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txt_edit_Dom_min, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_edit_Dom_max, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_edit_PlanPrice)
                            .addComponent(txt_edit_PlanName)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txt_edit_Inter_min, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_edit_Inter_max, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_edit_PlanName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_edit_PlanPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(34, 34, 34))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txt_edit_Dom_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(txt_edit_Dom_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_edit_Inter_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txt_edit_Inter_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách gói cước"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        plan_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên gói", "Giá gói", "Tốc độ tối đa trong nước", "Tốc độ tối thiểu trong nước", "Tốc độ tối đa quốc tế", "Tốc độ tối thiểu quốc tế"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DefaultTableModel model = (DefaultTableModel) plan_table.getModel();
        model.setRowCount(0); // Xoá dữ liệu cũ nếu có
        try{
            List<Plan> ds = PlanDAO.getAll();
            for (Plan pl : ds){
                Object[] row = {
                    pl.getPlan_id(),
                    pl.getName(),
                    pl.getPrice(),
                    pl.getMax_speed_domestic(),
                    pl.getMin_speed_domestic(),
                    pl.getMax_speed_international(),
                    pl.getMin_speed_international(),
                };
                model.addRow(row);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e, "Message", JOptionPane.ERROR_MESSAGE);
        }
        jScrollPane1.setViewportView(plan_table);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void setupTableSelectionListener() {
            DefaultTableModel model = (DefaultTableModel) plan_table.getModel();
        model.setRowCount(0); // Xoá dữ liệu cũ nếu có
        try{
                List<Plan> ds = PlanDAO.getAll();
            for (Plan pl : ds){
                Object[] row = {
                    pl.getPlan_id(),
                    pl.getName(),
                    pl.getPrice(),
                    pl.getMax_speed_domestic(),
                    pl.getMin_speed_domestic(),
                    pl.getMax_speed_international(),
                    pl.getMin_speed_international(),
                };
                model.addRow(row);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e, "Message", JOptionPane.ERROR_MESSAGE);
        }

    }
    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        // TODO add your handling code here:
        try {
            String keyword = txt_Plan_name.getText().trim();

            Double priceMin = (double) Min_price;
            Double priceMax = (double) Max_price;

            Integer speedMinDom = Min_bw;
            Integer speedMaxDom = Max_bw;

            Integer speedMinIntl = Min_bw;
            Integer speedMaxIntl = Max_bw;

            List<Plan> results = PlanDAO.searchPlans(
                    keyword,
                    priceMin, priceMax,
                    speedMinDom, speedMaxDom,
                    speedMinIntl, speedMaxIntl
            );

            DefaultTableModel model = (DefaultTableModel) plan_table.getModel();
            model.setRowCount(0);
            for (Plan pl : results) {
                Object[] row = {
                        pl.getPlan_id(),
                        pl.getName(),
                        pl.getPrice(),
                        pl.getMax_speed_domestic(),
                        pl.getMin_speed_domestic(),
                        pl.getMax_speed_international(),
                        pl.getMin_speed_international()
                };
                model.addRow(row);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_SearchActionPerformed

    private void txt_Plan_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_Plan_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Plan_nameActionPerformed

    private void checkbox_bwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_bwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkbox_bwActionPerformed

    private void checkbox_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkbox_priceActionPerformed

    private void jSlider_domesticMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_domesticMaxStateChanged
        // TODO add your handling code here:
        int max = jSlider_domesticMax.getValue();
        int min = jSlider_domesticMin.getValue();
        if (min > max){
            min = max;
            jSlider_domesticMin.setValue(min);
            
        }
        txt_dom_max.setText(String.valueOf(max));
//        jSlider_domesticMax.updateUI();
        
    }//GEN-LAST:event_jSlider_domesticMaxStateChanged

    private void jSlider_domesticMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_domesticMinStateChanged
        // TODO add your handling code here
        int max = jSlider_domesticMax.getValue();
        int min = jSlider_domesticMin.getValue();
        if (max < min){
            max = min;
            jSlider_domesticMax.setValue(max);
            
        }
        txt_dom_min.setText(String.valueOf(min));
//        jSlider_domesticMin.updateUI();
    }//GEN-LAST:event_jSlider_domesticMinStateChanged

    private void jSlider_internationalMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_internationalMaxStateChanged
        // TODO add your handling code here:
        int max = jSlider_internationalMax.getValue();
        int min = jSlider_internationalMin.getValue();
        if (min > max){
            min = max;
            jSlider_internationalMin.setValue(min);
            
        }
        txt_inter_max.setText(String.valueOf(max));
//        jSlider_internationalMax.updateUI();
    }//GEN-LAST:event_jSlider_internationalMaxStateChanged

    private void jSlider_internationalMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_internationalMinStateChanged
        // TODO add your handling code here:
        int max = jSlider_internationalMax.getValue();
        int min = jSlider_internationalMin.getValue();
        if (max < min){
            max = min;
            jSlider_internationalMax.setValue(max);
            
        }
        txt_inter_min.setText(String.valueOf(min));
//        jSlider_internationalMin.updateUI();
    }//GEN-LAST:event_jSlider_internationalMinStateChanged

    private void txt_dom_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dom_minActionPerformed
        // TODO add your handling code here:
        try{
            int value = Integer.parseInt(txt_dom_min.getText());
            value = Math.max(jSlider_domesticMin.getMinimum(), Math.min(value, jSlider_domesticMax.getValue()));
            jSlider_domesticMin.setValue(value);
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ cho tốc độ tối thiểu!");
}
    }//GEN-LAST:event_txt_dom_minActionPerformed

    private void txt_dom_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dom_maxActionPerformed
        // TODO add your handling code here:
        try {
            int value = Integer.parseInt(txt_dom_max.getText());
            value = Math.min(jSlider_domesticMax.getMaximum(), Math.max(value, jSlider_domesticMin.getValue()));
            jSlider_domesticMax.setValue(value);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ cho tốc độ tối đa!");
        }
    }//GEN-LAST:event_txt_dom_maxActionPerformed

    private void txt_edit_Dom_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_Dom_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_Dom_maxActionPerformed

    private void txt_edit_Dom_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_Dom_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_Dom_minActionPerformed

    private void txt_edit_PlanNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_PlanNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_PlanNameActionPerformed

    private void txt_edit_PlanPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_PlanPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_PlanPriceActionPerformed

    private void txt_edit_Inter_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_Inter_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_Inter_maxActionPerformed

    private void txt_edit_Inter_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_edit_Inter_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_edit_Inter_minActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá?");
        if (confirm == JOptionPane.YES_OPTION) {
            try {
//                int id = Integer.parseInt(txtId.getText());
                boolean success = PlanDAO.delete(Selected_id);
                if (success) {
//                    JOptionPane.showMessageDialog(this, "Xoá thành công!");
                    setupTableSelectionListener();
                } else {
                    JOptionPane.showMessageDialog(this, "Xoá thất bại!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_filterActionPerformed
        // TODO add your handling code here:
        try {
        String keyword = null;
            Double priceMin = (double) Min_price;
            Double priceMax = (double) Max_price;

            Integer speedMinDom = Min_bw;
            Integer speedMaxDom = Max_bw;

            Integer speedMinIntl = Min_bw;
            Integer speedMaxIntl = Max_bw;
        if(checkbox_bw.isSelected()){
            speedMinDom = parseInt(txt_dom_min.getText());
            speedMaxDom = parseInt(txt_dom_max.getText());

            speedMinIntl = parseInt(txt_inter_min.getText());
            speedMaxIntl = parseInt(txt_inter_max.getText());
        }
        if(checkbox_price.isSelected()){
            priceMin = parseDouble(txt_price_min.getText());
            priceMax = parseDouble(txt_price_max.getText());
        }



        List<Plan> results = PlanDAO.searchPlans(
            null,
            priceMin, priceMax,
            speedMinDom, speedMaxDom,
            speedMinIntl, speedMaxIntl
        );

        DefaultTableModel model = (DefaultTableModel) plan_table.getModel();
        model.setRowCount(0);
        for (Plan pl : results) {
            Object[] row = {
                pl.getPlan_id(),
                pl.getName(),
                pl.getPrice(),
                pl.getMax_speed_domestic(),
                pl.getMin_speed_domestic(),
                pl.getMax_speed_international(),
                pl.getMin_speed_international()
            };
            model.addRow(row);
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm: " + ex.getMessage());
    }
    }//GEN-LAST:event_btn_filterActionPerformed

    private void jSlider_priceMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_priceMaxStateChanged
        // TODO add your handling code here:
        int max = jSlider_priceMax.getValue();
        int min = jSlider_priceMin.getValue();
        if (max < min){
            min = max;
            jSlider_priceMin.setValue(min);
            
        }
        txt_price_max.setText(String.valueOf(max));
    }//GEN-LAST:event_jSlider_priceMaxStateChanged

    private void jSlider_priceMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_priceMinStateChanged
        // TODO add your handling code here:
        int max = jSlider_priceMax.getValue();
        int min = jSlider_priceMin.getValue();
        if (min > max){
            max = min;
            jSlider_priceMax.setValue(max);
            
        }
        txt_price_min.setText(String.valueOf(min));
    }//GEN-LAST:event_jSlider_priceMinStateChanged

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        try {
            Plan plan = new Plan(
                    0, // ID thường auto-increment
                    txt_edit_PlanName.getText(),
                    Double.parseDouble(txt_edit_PlanPrice.getText()),
                    Double.parseDouble(txt_edit_Dom_max.getText()),
                    Double.parseDouble(txt_edit_Dom_min.getText()),
                    Double.parseDouble(txt_edit_Inter_max.getText()),
                    Double.parseDouble(txt_edit_Inter_min.getText())
            );
            PlanDAO.insert(plan);
            setupTableSelectionListener();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // TODO add your handling code here:
        try {
            Plan plan = new Plan(
                    Selected_id,
                    txt_edit_PlanName.getText(),
                    Double.parseDouble(txt_edit_PlanPrice.getText()),
                    Double.parseDouble(txt_edit_Dom_max.getText()),
                    Double.parseDouble(txt_edit_Dom_min.getText()),
                    Double.parseDouble(txt_edit_Inter_max.getText()),
                    Double.parseDouble(txt_edit_Inter_min.getText())
            );
            PlanDAO.update(plan);
            setupTableSelectionListener();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_editActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanManagement().setVisible(true);
            }
        });
    }
    private int Min_bw = 0;
    private int Max_bw = 1000;
    private int Min_price = 0;
    private int Max_price = 10000000;
    private int Selected_id = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_filter;
    private javax.swing.JCheckBox checkbox_bw;
    private javax.swing.JCheckBox checkbox_price;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_BwFilterPanel;
    private javax.swing.JPanel jPanel_PriceFilterPanel;
    private javax.swing.JPanel jPanel_SearchPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider_domesticMax;
    private javax.swing.JSlider jSlider_domesticMin;
    private javax.swing.JSlider jSlider_internationalMax;
    private javax.swing.JSlider jSlider_internationalMin;
    private javax.swing.JSlider jSlider_priceMax;
    private javax.swing.JSlider jSlider_priceMin;
    private javax.swing.JTable plan_table;
    private javax.swing.JTextField txt_Plan_name;
    private javax.swing.JTextField txt_dom_max;
    private javax.swing.JTextField txt_dom_min;
    private javax.swing.JTextField txt_edit_Dom_max;
    private javax.swing.JTextField txt_edit_Dom_min;
    private javax.swing.JTextField txt_edit_Inter_max;
    private javax.swing.JTextField txt_edit_Inter_min;
    private javax.swing.JTextField txt_edit_PlanName;
    private javax.swing.JTextField txt_edit_PlanPrice;
    private javax.swing.JTextField txt_inter_max;
    private javax.swing.JTextField txt_inter_min;
    private javax.swing.JTextField txt_price_max;
    private javax.swing.JTextField txt_price_min;
    // End of variables declaration//GEN-END:variables

}
